canvas {
  border: 3px solid #000000;
  border-radius: 20px;
  margin: 20px auto;
  display: block;
  max-width: 90%;
  width: 100%;
  height: auto;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  cursor: pointer;
  image-rendering: pixelated;
  /* ベースのレトロエフェクト */
  filter: contrast(1.2) saturate(0.9) blur(1px) sepia(0.08);

  /* CRTモニター風 */
  border-radius: 8px;
  box-shadow: inset 0 0 40px rgba(0, 0, 0, 0.3), 0 0 60px rgba(0, 0, 0, 0.6);

  /* スキャンライン効果をCanvasの中だけに適用 */
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 4px,
    rgba(0, 0, 0, 0.12) 4px,
    rgba(0, 0, 0, 0.12) 6px
  );
}

#canvas-container {
  position: relative;
  overflow: hidden; /* RGB効果がはみ出さないように */
}

/* RGB色収差エフェクト - Canvas部分のみに適用 */
#canvas-container::before,
#canvas-container::after {
  content: "";
  position: absolute;
  /* Canvasの位置とサイズに合わせる */
  top: 20px; /* canvasのmargin分 */
  left: 50%;
  transform: translateX(-50%);
  width: 90%; /* canvasのmax-width分 */
  height: calc(100% - 40px); /* canvasのmargin分を引く */
  pointer-events: none;
  mix-blend-mode: screen;
  opacity: 0.6;
}

/* 赤チャンネルの滲み - 大幅強化 */
#canvas-container::before {
  background: repeating-linear-gradient(
    90deg,
    rgba(255, 0, 0, 0.4) 0px,
    rgba(255, 0, 0, 0.4) 2px,
    transparent 2px,
    transparent 4px
  );
  transform: translateX(-50%) translateX(3px);
}

/* 青チャンネルの滲み - 大幅強化 */
#canvas-container::after {
  background: repeating-linear-gradient(
    90deg,
    rgba(0, 100, 255, 0.35) 0px,
    rgba(0, 100, 255, 0.35) 2px,
    transparent 2px,
    transparent 4px
  );
  transform: translateX(-50%) translateX(-3px);
}

/* 軽いアニメーション */
@keyframes crt-flicker {
  0%,
  100% {
    filter: contrast(1.2) saturate(0.9) blur(1px) sepia(0.08) brightness(1);
  }
  50% {
    filter: contrast(1.25) saturate(0.85) blur(1.2px) sepia(0.1) brightness(1.05);
  }
}

#canvas-container canvas {
  animation: crt-flicker 5s ease-in-out infinite;
}
